{
  // Place your hlm-frontend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Store": {
    "prefix": "store",
    "body": [
      "import { defineStore } from 'pinia'",
      "",
      "export const $1Store = defineStore('$1-store', {",
      "  state: () => ({",
      "    //",
      "  }),",
      "",
      "  actions: {",
      "    constructor() {",
      "      //",
      "    },",
      "  },",
      "})",
      ""
    ],
    "description": "Store"
  },
  "Page": {
    "prefix": "page",
    "body": [
      "<template>",
      "  <div></div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue'",
      "",
      "export default defineComponent({",
      "  setup() {",
      "    const store = $1Store()",
      "    store.constructor()",
      "    return { store }",
      "  },",
      "})",
      "</script>",
      "",
      "<style scoped></style>",
      ""
    ],
    "description": "Store"
  }
}
